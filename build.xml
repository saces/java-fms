<?xml version="1.0"?>
<project name="FelineMurineSynergy" default="dist" basedir=".">
	<property name="freenet-cvs-snapshot.location" location="../fred/lib/freenet-cvs-snapshot.jar"/>
	<property name="freenet-ext.location" location="../fred/lib/freenet-ext.jar"/>
	<property name="svn.revision" value="@custom@"/>
	<property name="source-version" value="1.5"/>
	<property name="debug" value="on"/>
	<property name="build" location="build/"/>
	<property name="dist" location="dist/"/>
	<property name="tmp" location="tmp/"/>
	<property name="derby-jar" location="lib/derby.jar"/>


	<!-- ================================================== -->
	<property name="apache.mirror" value="http://archive.apache.org/" />
	<property name="derby.mirror" value="${apache.mirror}/dist/db/derby/db-derby-10.5.1.1/db-derby-10.5.1.1-lib-debug.zip" />
	<property name="derby.md5" value="03d07c7f9202c98d1bc69b09fee428d3" />
	<property name="derby.sha" value="8ddc13c05976a55c889e7e8c8f21b8f69020f218" />

	<available property="derby.exist" file="${derby-jar}" />
	<target name="derby-get" unless="derby.exist" depends="mkdir">
		<get verbose="true" src="${derby.mirror}" dest="${tmp}/derby.zip" />
		<checksum file="${tmp}/derby.zip" algorithm="MD5" property="${derby.md5}" verifyProperty="derbyMD5ok" />
		<checksum file="${tmp}/derby.zip" algorithm="SHA" property="${derby.sha}" verifyProperty="derbySHAok" />

		<fail message="derby.zip checksum mismatch">
			<condition>
				<or>
					<equals arg1="${derbyMD5ok}" arg2="false" />
					<equals arg1="${derbySHAok}" arg2="false" />
				</or>
			</condition>
		</fail>

		<unzip src="${tmp}/derby.zip" dest="lib/">
			<patternset>
				<include name="**/derby.jar"/>
			</patternset>
			<mapper type="flatten"/>
		</unzip>
	</target>

	<!-- ================================================== -->
	<target name="mkdir">
		<mkdir dir="${build}"/>
		<mkdir dir="${dist}"/>
		<mkdir dir="lib" />
		<mkdir dir="${tmp}" />
	</target>

	<!-- ================================================== -->
	<target name="compile" depends="mkdir,derby-get" >
		<tstamp/>
		<javac srcdir="src/" destdir="${build}" debug="${debug}" source="${source-version}">
			<classpath>
				<pathelement location="${freenet-ext.location}"/>
				<pathelement location="${freenet-cvs-snapshot.location}"/>
				<pathelement location="${derby-jar}" />
			</classpath>
			<include name="**/*.java"/>
		</javac>
	</target>

	<!-- ================================================== -->
	<target name="dist" depends="clean,compile" description="generate the distribution" >
		<!-- Git Version -->
		<exec executable="git" failifexecutionfails="false" outputproperty="git.head" resultproperty="git.result">
			<arg value="rev-parse" />
			<arg value="HEAD" />
		</exec>
		<condition property="git.revision" value="${git.head}" else="@unknown@">
			<and>
				<equals arg1="${git.result}" arg2="0" />
				<isset property="git.head" />
			</and>
		</condition>

		<!-- Extract Derby -->
		<unzip src="${derby-jar}" dest="${build}/" />

		<!-- JAR -->
		<jar jarfile="${dist}/FMS.jar" duplicate="fail">
			<manifest>
				<attribute name="Plugin-Main-Class" value="plugins.FMS.FMS"/>
				<attribute name="Implementation-Version" value="${git.revision}"/>
			</manifest>
			<fileset dir="${build}/"/>
			<fileset dir="src/" casesensitive="no">
				<exclude name="*.java"/>
			</fileset>
		</jar>
	</target>

	<!-- ================================================== -->
	<target name="clean" description="Delete class files and docs dir.">
		<delete dir="${build}"/>
		<delete dir="${dist}"/>
	</target>
</project>
